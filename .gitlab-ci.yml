stages:
  - base
  - prepare
  - lint
  - build
  - test

cache: &global_cache_configuration
  paths:
    - node_modules/
    - build/
  policy: pull-push

.docker-job:
  tags: [docker_runner]
#  before_script:
#    - apk add --no-cache curl unzip python3 py3-pip
#    - pip3 install --upgrade pip
#    - pip3 install awscli
#    - rm -rf /var/cache/apk/*

.merge-request-job:
  tags: [docker_runner]
  image: ${container_registry}/energi-governance-builder
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

build-docker:
  stage: base
  cache: []
  dependencies: []
  extends: .docker-job
  script:
    - docker build -t energi-governance-builder:${CI_COMMIT_REF_NAME} -f Dockerfile .
    - docker tag energi-governance-builder:${CI_COMMIT_REF_NAME} ${container_registry}/energi-governance-builder:${CI_COMMIT_REF_NAME}
    - docker push ${container_registry}/energi-governance-builder:${CI_COMMIT_REF_NAME}
    - docker tag energi-governance-builder:${CI_COMMIT_REF_NAME} ${container_registry}/energi-governance-builder:latest
    - docker push ${container_registry}/energi-governance-builder:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - Dockerfile
    - if: $CI_COMMIT_TAG
    - if: '$CI_COMMIT_BRANCH == "develop"'

clean-repo:
  stage: prepare
  cache: []
  dependencies: []
  extends: .merge-request-job
  script:
    - git checkout -- .
    - git clean -fdx -e node_modules .

# TODO: this doesn't work, git branch -a shows only a detached head state
# TODO: this actually tries to execute the merge, may not be the best way to check this
# it will also fail for master branch merges
#branch-check:
#  stage: prepare
#  cache: []
#  extends: .merge-request-job
#  script:
#    - git branch -a
#    - if [[ "$(git merge origin/develop)" != "Already up to date." ]]; then echo "[Error] branch is not up to date with develop"; exit 1; fi

yarn-install:
  dependencies: []
  needs: [clean-repo]
  stage: prepare
  cache:
    # inherit all global cache Settings
    <<: *global_cache_configuration
    policy: push
  extends: .merge-request-job
  script:
    - yarn install

lint:
  dependencies: []
  needs: [yarn-install]
  stage: lint
  cache:
    # inherit all global cache settings
    <<: *global_cache_configuration
    # override the policy
    policy: pull
  extends: .merge-request-job
  allow_failure: true
  script:
    - yarn run lint

build:
  dependencies: []
  needs: [yarn-install, lint]
  stage: build
  cache:
    # inherit all global cache settings
    <<: *global_cache_configuration
    # override the policy
    # policy: pull
  extends: .merge-request-job
  script:
    - yarn run compile

test:
  dependencies: []
  needs: [build]
  stage: test
  cache:
    # inherit all global cache settings
    <<: *global_cache_configuration
    # override the policy
    policy: pull
  extends: .merge-request-job
  allow_failure: true
  script:
    - yarn run ganache
    - yarn run test
